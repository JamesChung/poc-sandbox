openapi: '3.0.3'
info:
  title: Matter replacement sample PoC API
  version: '1.0.0'
servers:
  - url: https://api.matter.com/v1
    description: Production Endpoint
tags:
  - name: info
    description: Server Info
  - name: policies
    description: Policies endpoint
  - name: configs
    description: Configs endpoint
  - name: exemptions
    description: Descriptions endpoint
paths:
  /info:
    get:
      tags:
        - info
      summary: Get info
      description: >
        Gets the current version and any other data that may be useful
      responses:
        '200':
          description: The current version and any other data that may be useful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
              example:
                version: '1.0.0'
                metadata:
                  transaction_id: 01H44690SXVQTPH0ARJ357RYRW
  /policies:
    get:
      tags:
        - policies
      summary: Get policies
      description: >
        Gets an array of all the policies for a particular client ID
      parameters:
        - name: client_id
          in: query
          description: The client id
          required: true
          schema:
            type: string
        - name: continuationToken
          in: query
          description: (Optional) pagination token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of policies for a given client ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  policies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Policy'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
              example:
                policies:
                  - name: EXAMPLE_RULE_23
                    version: '1.0.0'
                    location: 's3://example-bucket/example_policy_23.json'
                  - name: EXAMPLE_RULE_42
                    version: '1.0.0'
                    location: 's3://example-bucket/example_policy_42.json'
                metadata:
                  transaction_id: 01H446AJM6GEY9833ZFYGYQS1N
    post:
      tags:
        - policies
      summary: Add a policy
      description: >
        Add an additional policy YYYYYY to client_id XXXXXX's to be returned. If the version is specified, it will be added as well. If an existing policy addition already exists, this will replace that entity.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                policy:
                  type: string
                policy_version:
                  type: string
      responses:
        '201':
          description: The policy is added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              example:
                metadata:
                  transaction_id: 01H443S4MKWBYCYVYSTQEXKBMA
  /configs:
    get:
      tags:
        - configs
      summary: Get configurations
      description: |
        Searches for a configuration item in the following order:
        - by client_id/policy/policy_version
        - by client_id/policy
        - by policy/policy_version
        - by policy
      parameters:
        - name: client_id
          in: query
          description: The unique client ID for a given client
          required: true
          schema:
            type: string
        - name: policy
          in: query
          description: The policy name
          required: true
          schema:
            type: string
        - name: policy_version
          in: query
          description: The policy version
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >
            The configuration for each rule is going to be different, some will need lists of account ids, whereas others will not require any configuration at all.
          content:
            application/json:
              schema:
                type: object
                properties:
                  configuration:
                    type: object
                    description: Configuration document
                  metadata:
                    $ref: '#/components/schemas/Metadata'
    delete:
      tags:
        - configs
      summary: Delete configurations
      description: >
        Removes the configuration uniquely identified by the set of query parameters passed in.
      parameters:
        - name: client_id
          in: query
          description: The unique client ID for a given client
          required: false
          schema:
            type: string
        - name: policy
          in: query
          description: The policy name
          required: true
          schema:
            type: string
        - name: policy_version
          in: query
          description: The policy version
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Deletion is completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              example:
                metadata:
                  transaction_id: 01H4475BR866G0QNV06M672650
  /exclusions:
    post:
      tags:
        - exclusions
      summary: Exempt a policy for a given client
      description: >
        Remove policy YYYYYY from the list of policies for client_id XXXXXX. It does this by creating an exemption record in the database to be evaluated as above. If the exclusion exists, it is considered successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                policy:
                  type: string
      responses:
        '201':
          description: Exclusion completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              example:
                metadata:
                  transaction_id: 01H4475BR866G0QNV06M672650
    delete:
      tags:
        - exclusions
      summary: Delete exclusions
      description: >
        Remove exclusion YYYYYY from the list of policies for client_id XXXXXXX. It does this by deleting the exemption record in the database to be evaluated as above.
      parameters:
        - name: client_id
          in: query
          description: The unique client ID for a given client
          required: false
          schema:
            type: string
        - name: policy
          in: query
          description: The policy name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exclusion deletion completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
              example:
                metadata:
                  transaction_id: 01H4475BR866G0QNV06M672650
components:
  schemas:
    Info:
      type: object
      properties:
        version:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
    Policy:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        location:
          type: string
    Metadata:
      type: object
      properties:
        transaction_id:
          type: string

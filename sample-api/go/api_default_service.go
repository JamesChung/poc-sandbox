/*
 * Matter replacement sample PoC API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// ConfigsDelete - Delete configurations
func (s *DefaultApiService) ConfigsDelete(ctx context.Context, policy string, clientId string, policyVersion string) (ImplResponse, error) {
	// TODO - update ConfigsDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Metadata{}) or use other options such as http.Ok ...
	//return Response(200, Metadata{}), nil

	//TODO: Uncomment the next line to return response Response(202, Metadata{}) or use other options such as http.Ok ...
	//return Response(202, Metadata{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigsDelete method not implemented")
}

// ConfigsGet - Get configurations
func (s *DefaultApiService) ConfigsGet(ctx context.Context, clientId string, policy string, policyVersion string) (ImplResponse, error) {
	// TODO - update ConfigsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ConfigsGet200Response{}) or use other options such as http.Ok ...
	//return Response(200, ConfigsGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ConfigsGet method not implemented")
}

// ExclusionsDelete - Delete exclusions
func (s *DefaultApiService) ExclusionsDelete(ctx context.Context, policy string, clientId string) (ImplResponse, error) {
	// TODO - update ExclusionsDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Metadata{}) or use other options such as http.Ok ...
	//return Response(200, Metadata{}), nil

	//TODO: Uncomment the next line to return response Response(202, Metadata{}) or use other options such as http.Ok ...
	//return Response(202, Metadata{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ExclusionsDelete method not implemented")
}

// ExclusionsPost - Get exclusions
func (s *DefaultApiService) ExclusionsPost(ctx context.Context, exclusionsPostRequest ExclusionsPostRequest) (ImplResponse, error) {
	// TODO - update ExclusionsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Metadata{}) or use other options such as http.Ok ...
	//return Response(200, Metadata{}), nil

	//TODO: Uncomment the next line to return response Response(202, Metadata{}) or use other options such as http.Ok ...
	//return Response(202, Metadata{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ExclusionsPost method not implemented")
}

// InfoGet - Get info
func (s *DefaultApiService) InfoGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update InfoGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Info{}) or use other options such as http.Ok ...
	//return Response(200, Info{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("InfoGet method not implemented")
}

// PoliciesGet - Get policies
func (s *DefaultApiService) PoliciesGet(ctx context.Context, clientId string, continuationToken string) (ImplResponse, error) {
	// TODO - update PoliciesGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Policy{}) or use other options such as http.Ok ...
	//return Response(200, []Policy{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PoliciesGet method not implemented")
}

// PoliciesPost - Add a policy
func (s *DefaultApiService) PoliciesPost(ctx context.Context, policiesPostRequest PoliciesPostRequest) (ImplResponse, error) {
	// TODO - update PoliciesPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, Metadata{}) or use other options such as http.Ok ...
	//return Response(201, Metadata{}), nil

	//TODO: Uncomment the next line to return response Response(202, Metadata{}) or use other options such as http.Ok ...
	//return Response(202, Metadata{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PoliciesPost method not implemented")
}
